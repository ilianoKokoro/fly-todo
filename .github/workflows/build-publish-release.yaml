on:
    push:
        branches:
            - main
        paths:
            - "flutter-client/**"
            - ".github/workflows/**"
    workflow_dispatch:

concurrency:
    group: cancel-on-new-run
    cancel-in-progress: true

env:
    SUB_DIR: flutter-client
    ANDROID_TARGET_BINARY_NAME: android-fly-todo-release
    WINDOWS_TARGET_BUNDLE_NAME: windows-fly-todo-release
    ANDROID_APK_PATH: ./build/app/outputs/flutter-apk/app-release.apk
    WINDOWS_BINARY_LOCATION: build/windows/x64/runner/Release/fly_todo.msix
    STORE_FILE_PATH: /tmp/release-key.jks

name: Build the binaries and publish if on Prod
jobs:
    build-android-apk:
        runs-on: ubuntu-latest
        name: Build the Android APK
        steps:
            - uses: actions/checkout@v4

            - name: Set up Java 21
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: 21
                  cache: "gradle"

            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                  channel: stable
                  cache: true

            - name: Print all Flutter versions
              run: flutter doctor -v

            - name: Set up Keystore
              run: |
                  echo "$KEYSTORE_BASE64" | base64 -d > ${{ env.STORE_FILE_PATH }}
              env:
                  KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

            - name: Create keystore.properties file
              run: |
                  echo "storeFile=${{env.STORE_FILE_PATH}}" > $GITHUB_WORKSPACE/${{env.SUB_DIR}}/android/keystore.properties
                  echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> $GITHUB_WORKSPACE/${{env.SUB_DIR}}/android/keystore.properties
                  echo "keyAlias=${{ secrets.ALIAS }}" >> $GITHUB_WORKSPACE/${{env.SUB_DIR}}/android/keystore.properties
                  echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_WORKSPACE/${{env.SUB_DIR}}/android/keystore.properties

            - name: Get the packages
              working-directory: ${{env.SUB_DIR}}
              run: flutter pub get

            - name: Build APK
              working-directory: ${{env.SUB_DIR}}
              run: flutter build apk --release

            - name: Rename APK
              working-directory: ${{env.SUB_DIR}}
              run: mv ${{env.ANDROID_APK_PATH}} ./${{env.ANDROID_TARGET_BINARY_NAME}}.apk

            - name: Upload APK
              uses: actions/upload-artifact@v4
              with:
                  name: ${{env.ANDROID_TARGET_BINARY_NAME}}
                  path: ./${{env.SUB_DIR}}/${{env.ANDROID_TARGET_BINARY_NAME}}.apk
                  if-no-files-found: error
    build-windows-binary:
        runs-on: windows-latest
        name: Build the Windows installer
        steps:
            - uses: actions/checkout@v4

            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                  channel: stable
                  cache: true
            - run: flutter --version

            - name: Generate MSIX
              working-directory: ${{env.SUB_DIR}}
              run: dart run msix:create --install-certificate false
            - name: Rename APK
              working-directory: ${{env.SUB_DIR}}
              run: mv ${{env.WINDOWS_BINARY_LOCATION}} ./${{env.WINDOWS_TARGET_BUNDLE_NAME}}.msix

            - name: Upload binary
              uses: actions/upload-artifact@v4
              with:
                  name: ${{env.WINDOWS_TARGET_BUNDLE_NAME}}
                  path: ./${{env.SUB_DIR}}/${{env.WINDOWS_TARGET_BUNDLE_NAME}}.msix
                  if-no-files-found: error
